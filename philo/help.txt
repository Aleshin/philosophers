• Один или несколько философов сидят за круглым столом.
В центре стола стоит большая миска со спагетти.
• Философы поочередно едят, думают или спят.
Когда они едят, они не думают и не спят; когда они думают, они не едят и не спят;
и, конечно, во время сна они не едят и не думают.
• На столе также лежат вилки. Вилок столько, сколько философов.
• Поскольку подавать спагетти на стол и есть их только одной вилкой очень неудобно,
философ берет правую и левую вилки, чтобы поесть, по одной в каждую руку.
• Когда философ заканчивает есть, он кладет вилки обратно на стол и засыпает. Проснувшись, он снова начинает думать. Симуляция прекращается, когда философ умирает от голода.
• Каждому философу нужно есть, и он никогда не должен голодать.
• Философы не разговаривают друг с другом.
• Философы не знают, умирает ли другой философ.
• Нет необходимости говорить, что философы должны избегать смерти!

Вам необходимо написать программу для обязательной части и еще одну для бонусной части (если вы решите выполнить бонусную часть). Они обе должны соответствовать следующим правилам:
• Глобальные переменные запрещены!
• Ваши программы должны принимать следующие аргументы: number_of_philosophers, time_to_die, time_to_eat, time_to_sleep [number_of_times_each_philosopher_must_eat]
◦ number_of_philosophers: количество философов, а также количество ответвлений.
◦ время до смерти (в миллисекундах): Если философ не начал есть в течение миллисекунд с момента своего последнего приема пищи или начала симуляции, он умирает.
◦ time_to_eat (в миллисекундах): Время, необходимое философу для принятия пищи. В течение этого времени ему нужно будет держать две вилки.
◦ time_to_sleep (в миллисекундах): время, которое философ потратит на сон.
◦ number_of_times_each_philosopher_must_eat (необязательный аргумент): Если все философы съели хотя бы number_of_times_each_philosopher_must_eat раз, симуляция прекращается. Если не указано иное, симуляция прекращается, когда философ умирает.
• У каждого философа есть номер в диапазоне от 1 до number_of_philosophers.
• Философ под номером 1 находится рядом с философом под номером number_of_philosophers. Любой другой философ под номером N находится между философом под номером N - 1 и философом под номером N + 1.
6
Философов, я никогда не думал, что философия может быть настолько смертоносной
 О логах вашей программы:
• Любое изменение состояния философа должно быть оформлено следующим образом:
◦ отметка_в_мс X принял решение ◦ отметка_в_мс X ест
◦ отметка_в_мс X спит
◦ отметка_в_мс X думает
◦ значение timestamp_in_ms X исчезло
Замените значение timestamp_in_ms на текущее значение в миллисекундах
, а значение X - на число philosopher.
• Отображаемое сообщение о состоянии не должно быть перепутано с другим сообщением.
• Сообщение о смерти философа должно отображаться не более чем через 10 мс после фактической смерти философа.
• Еще раз напоминаю, что философам следует избегать смерти!